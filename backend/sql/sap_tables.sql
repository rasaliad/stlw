-- Tabla para Items/Artículos de SAP
CREATE TABLE SAP_ITEMS (
    ID INTEGER NOT NULL,
    CODE VARCHAR(50) NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    FOREIGN_NAME VARCHAR(255),
    ITEMS_GROUP_CODE INTEGER,
    CUSTOMS_GROUP_CODE INTEGER,
    SALES_VAT_GROUP VARCHAR(20),
    BAR_CODE VARCHAR(50),
    VAT_LIABLE VARCHAR(1),
    PURCHASE_ITEM VARCHAR(1),
    SALES_ITEM VARCHAR(1),
    INVENTORY_ITEM VARCHAR(1),
    INCOME_ACCOUNT VARCHAR(20),
    EXEMPT_INCOME_ACCOUNT VARCHAR(20),
    EXPENSE_ACCOUNT VARCHAR(20),
    MAIN_SUPPLIER VARCHAR(50),
    SUPPLIER_CATALOG_NO VARCHAR(50),
    DESIRED_INVENTORY DECIMAL(18,6),
    MIN_INVENTORY DECIMAL(18,6),
    MAX_INVENTORY DECIMAL(18,6),
    PICTURE BLOB SUB_TYPE TEXT,
    USER_TEXT BLOB SUB_TYPE TEXT,
    SERIAL_NUM VARCHAR(50),
    COMMISSION_PERCENT DECIMAL(18,6),
    COMMISSION_SUM DECIMAL(18,6),
    COMMISSION_GROUP INTEGER,
    TREE_TYPE VARCHAR(1),
    ASSET_ITEM VARCHAR(1),
    DATA_EXPORT_CODE VARCHAR(50),
    MANUFACTURER INTEGER,
    QUANTITY_ON_STOCK DECIMAL(18,6),
    QUANTITY_ORDERED_FROM_VENDORS DECIMAL(18,6),
    QUANTITY_ORDERED_BY_CUSTOMERS DECIMAL(18,6),
    MANAGE_SERIAL_NUMBERS VARCHAR(1),
    MANAGE_BATCH_NUMBERS VARCHAR(1),
    VALID VARCHAR(1),
    VALID_FROM TIMESTAMP,
    VALID_TO TIMESTAMP,
    VALID_REMARKS BLOB SUB_TYPE TEXT,
    FROZEN VARCHAR(1),
    FROZEN_FROM TIMESTAMP,
    FROZEN_TO TIMESTAMP,
    FROZEN_REMARKS BLOB SUB_TYPE TEXT,
    SALES_UNIT VARCHAR(20),
    SALES_ITEMS_PER_UNIT DECIMAL(18,6),
    PURCHASE_UNIT VARCHAR(20),
    PURCHASE_ITEMS_PER_UNIT DECIMAL(18,6),
    INVENTORY_UNIT VARCHAR(20),
    INVENTORY_ITEMS_PER_UNIT DECIMAL(18,6),
    LAST_PURCHASE_PRICE DECIMAL(18,6),
    LAST_PURCHASE_DATE TIMESTAMP,
    LAST_PURCHASE_CURRENCY VARCHAR(5),
    AVG_STD_PRICE DECIMAL(18,6),
    DEFAULT_WAREHOUSE VARCHAR(20),
    SHIP_TYPE INTEGER,
    GL_METHOD VARCHAR(10),
    TAX_TYPE VARCHAR(10),
    MANAGE_STOCK_BY_WAREHOUSE VARCHAR(1),
    ITEM_TYPE VARCHAR(1),
    ITEM_CLASS VARCHAR(10),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_ITEMS PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_ITEMS_ID;
CREATE TRIGGER BI_SAP_ITEMS_ID FOR SAP_ITEMS ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_ITEMS_ID, 1);
END;

CREATE UNIQUE INDEX IDX_SAP_ITEMS_CODE ON SAP_ITEMS(CODE);
CREATE INDEX IDX_SAP_ITEMS_NAME ON SAP_ITEMS(NAME);
CREATE INDEX IDX_SAP_ITEMS_SYNC ON SAP_ITEMS(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Business Partners/Socios de Negocio
CREATE TABLE SAP_BUSINESS_PARTNERS (
    ID INTEGER NOT NULL,
    CARD_CODE VARCHAR(50) NOT NULL,
    CARD_NAME VARCHAR(255) NOT NULL,
    CARD_TYPE VARCHAR(1),
    GROUP_CODE INTEGER,
    ADDRESS BLOB SUB_TYPE TEXT,
    ZIP_CODE VARCHAR(20),
    MAIL_ADDRESS BLOB SUB_TYPE TEXT,
    MAIL_ZIP_CODE VARCHAR(20),
    PHONE1 VARCHAR(50),
    PHONE2 VARCHAR(50),
    FAX VARCHAR(50),
    CONTACT_PERSON VARCHAR(255),
    NOTES BLOB SUB_TYPE TEXT,
    PAY_TERMS_GRP_CODE INTEGER,
    CREDIT_LIMIT DECIMAL(18,6),
    MAX_COMMITMENT DECIMAL(18,6),
    DISCOUNT_PERCENT DECIMAL(18,6),
    VAT_STATUS VARCHAR(1),
    TAX_LIABLE VARCHAR(1),
    VAT_GROUP VARCHAR(20),
    CURRENCY VARCHAR(5),
    RATE_DIFF_ACCOUNT VARCHAR(20),
    CELLULAR VARCHAR(50),
    AVERAGE_LATE INTEGER,
    CITY VARCHAR(100),
    COUNTY VARCHAR(100),
    COUNTRY VARCHAR(100),
    MAIL_CITY VARCHAR(100),
    MAIL_COUNTY VARCHAR(100),
    MAIL_COUNTRY VARCHAR(100),
    EMAIL_ADDRESS VARCHAR(255),
    PICTURE BLOB SUB_TYPE TEXT,
    DEFAULT_ACCOUNT VARCHAR(20),
    DEFAULT_BRANCH VARCHAR(20),
    DEFAULT_BANK_CODE VARCHAR(20),
    ADDITIONAL_ID VARCHAR(50),
    PAGER VARCHAR(50),
    FATHER_CARD VARCHAR(50),
    CARD_FOREIGN_NAME VARCHAR(255),
    FATHER_TYPE VARCHAR(1),
    DEDUCTIBLE_AT_SOURCE VARCHAR(1),
    DEDUCTION_PERCENT DECIMAL(18,6),
    DEDUCTION_VALID_UNTIL TIMESTAMP,
    PRIMARY_CONTACT_EMPLOYEE_ID INTEGER,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_BUSINESS_PARTNERS PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_BP_ID;
CREATE TRIGGER BI_SAP_BP_ID FOR SAP_BUSINESS_PARTNERS ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_BP_ID, 1);
END;

CREATE UNIQUE INDEX IDX_SAP_BP_CODE ON SAP_BUSINESS_PARTNERS(CARD_CODE);
CREATE INDEX IDX_SAP_BP_NAME ON SAP_BUSINESS_PARTNERS(CARD_NAME);
CREATE INDEX IDX_SAP_BP_TYPE ON SAP_BUSINESS_PARTNERS(CARD_TYPE);
CREATE INDEX IDX_SAP_BP_SYNC ON SAP_BUSINESS_PARTNERS(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Sales Orders/Órdenes de Venta
CREATE TABLE SAP_SALES_ORDERS (
    ID INTEGER NOT NULL,
    DOC_ENTRY INTEGER,
    DOC_NUM INTEGER,
    DOC_TYPE VARCHAR(1),
    HAND_WRITTEN VARCHAR(1),
    PRINTED VARCHAR(1),
    DOC_DATE TIMESTAMP,
    DOC_DUE_DATE TIMESTAMP,
    CARD_CODE VARCHAR(50),
    CARD_NAME VARCHAR(255),
    ADDRESS BLOB SUB_TYPE TEXT,
    NUM_AT_CARD VARCHAR(100),
    DOC_TOTAL DECIMAL(18,6),
    ATTACHMENT_ENTRY INTEGER,
    DOC_CURRENCY VARCHAR(5),
    DOC_RATE DECIMAL(18,6),
    REFERENCE1 VARCHAR(100),
    REFERENCE2 VARCHAR(100),
    COMMENTS BLOB SUB_TYPE TEXT,
    JOURNAL_MEMO VARCHAR(255),
    PAYMENT_GROUP_CODE INTEGER,
    DOC_TIME VARCHAR(10),
    SALES_PERSON_CODE INTEGER,
    TRANSPORTATION_CODE INTEGER,
    CONFIRMED VARCHAR(1),
    IMPORT_FILE_NUM INTEGER,
    SUMMERY_TYPE VARCHAR(1),
    CONTACT_PERSON_CODE INTEGER,
    SHOW_SCN VARCHAR(1),
    SERIES INTEGER,
    TAX_DATE TIMESTAMP,
    PARTIAL_SUPPLY VARCHAR(1),
    DOC_OBJECT_CODE VARCHAR(20),
    SHIP_TO_CODE VARCHAR(50),
    INDICATOR VARCHAR(50),
    FEDERAL_TAX_ID VARCHAR(50),
    DISCOUNT_PERCENT DECIMAL(18,6),
    PAYMENT_REFERENCE VARCHAR(100),
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    FINANCIAL_PERIOD INTEGER,
    USER_SIGN INTEGER,
    TRANS_NUM INTEGER,
    VAT_SUM DECIMAL(18,6),
    VAT_SUM_SYS DECIMAL(18,6),
    VAT_SUM_FC DECIMAL(18,6),
    NET_PROCEDURE VARCHAR(1),
    DOC_TOTAL_FC DECIMAL(18,6),
    DOC_TOTAL_SYS DECIMAL(18,6),
    REQUIRED_DATE TIMESTAMP,
    CANCEL_DATE TIMESTAMP,
    BLOCK_DUNNING VARCHAR(1),
    SUBMITTED VARCHAR(1),
    SEGMENT INTEGER,
    PICK_STATUS VARCHAR(1),
    PICK VARCHAR(1),
    PAYMENT_METHOD VARCHAR(20),
    PAYMENT_BLOCK VARCHAR(1),
    PAYMENT_BLOCK_ENTRY INTEGER,
    PROJECT VARCHAR(50),
    WAREHOUSE_UPDATE_TYPE VARCHAR(1),
    ROUNDING VARCHAR(1),
    STATUS VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_SALES_ORDERS PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_SO_ID;
CREATE TRIGGER BI_SAP_SO_ID FOR SAP_SALES_ORDERS ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_SO_ID, 1);
END;

CREATE INDEX IDX_SAP_SO_DOC_ENTRY ON SAP_SALES_ORDERS(DOC_ENTRY);
CREATE INDEX IDX_SAP_SO_DOC_NUM ON SAP_SALES_ORDERS(DOC_NUM);
CREATE INDEX IDX_SAP_SO_CARD_CODE ON SAP_SALES_ORDERS(CARD_CODE);
CREATE INDEX IDX_SAP_SO_DOC_DATE ON SAP_SALES_ORDERS(DOC_DATE);
CREATE INDEX IDX_SAP_SO_SYNC ON SAP_SALES_ORDERS(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Despachos personalizados
CREATE TABLE SAP_DISPATCHES (
    ID INTEGER NOT NULL,
    NUMERO_DESPACHO VARCHAR(50),
    FECHA_DESPACHO TIMESTAMP,
    CODIGO_CLIENTE VARCHAR(50),
    NOMBRE_CLIENTE VARCHAR(255),
    DIRECCION_ENTREGA BLOB SUB_TYPE TEXT,
    CIUDAD_ENTREGA VARCHAR(100),
    TELEFONO_CONTACTO VARCHAR(50),
    PERSONA_CONTACTO VARCHAR(255),
    ESTADO_DESPACHO VARCHAR(50),
    TRANSPORTISTA_ASIGNADO VARCHAR(255),
    VEHICULO_ASIGNADO VARCHAR(100),
    FECHA_ESTIMADA_ENTREGA TIMESTAMP,
    FECHA_REAL_ENTREGA TIMESTAMP,
    OBSERVACIONES_DESPACHO BLOB SUB_TYPE TEXT,
    VALOR_TOTAL_DESPACHO DECIMAL(18,6),
    PESO_TOTAL_DESPACHO DECIMAL(18,6),
    VOLUMEN_TOTAL_DESPACHO DECIMAL(18,6),
    NUMERO_GUIA_TRANSPORTE VARCHAR(100),
    COSTO_TRANSPORTE DECIMAL(18,6),
    SEGURO_MERCANCIA DECIMAL(18,6),
    DOCUMENTO_REFERENCIA VARCHAR(100),
    TIPO_DESPACHO VARCHAR(50),
    PRIORIDAD_DESPACHO VARCHAR(20),
    ZONA_ENTREGA VARCHAR(100),
    RUTA_ASIGNADA VARCHAR(100),
    HORARIO_ENTREGA VARCHAR(50),
    REQUIERE_CONFIRMACION VARCHAR(1),
    FIRMA_DIGITAL BLOB SUB_TYPE TEXT,
    GPS_LATITUD DECIMAL(18,10),
    GPS_LONGITUD DECIMAL(18,10),
    TEMPERATURA_TRANSPORTE DECIMAL(18,6),
    HUMEDAD_TRANSPORTE DECIMAL(18,6),
    CERTIFICADO_CALIDAD BLOB SUB_TYPE TEXT,
    USUARIO_CREACION VARCHAR(50),
    FECHA_CREACION TIMESTAMP,
    USUARIO_MODIFICACION VARCHAR(50),
    FECHA_MODIFICACION TIMESTAMP,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_DISPATCHES PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_DISPATCH_ID;
CREATE TRIGGER BI_SAP_DISPATCH_ID FOR SAP_DISPATCHES ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_DISPATCH_ID, 1);
END;

CREATE INDEX IDX_SAP_DISPATCH_NUM ON SAP_DISPATCHES(NUMERO_DESPACHO);
CREATE INDEX IDX_SAP_DISPATCH_DATE ON SAP_DISPATCHES(FECHA_DESPACHO);
CREATE INDEX IDX_SAP_DISPATCH_CLIENT ON SAP_DISPATCHES(CODIGO_CLIENTE);
CREATE INDEX IDX_SAP_DISPATCH_STATUS ON SAP_DISPATCHES(ESTADO_DESPACHO);
CREATE INDEX IDX_SAP_DISPATCH_SYNC ON SAP_DISPATCHES(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Inventario
CREATE TABLE SAP_INVENTORY (
    ID INTEGER NOT NULL,
    ITEM_CODE VARCHAR(50) NOT NULL,
    WHS_CODE VARCHAR(20) NOT NULL,
    ON_HAND DECIMAL(18,6),
    IS_COMMITED DECIMAL(18,6),
    ON_ORDER DECIMAL(18,6),
    MIN_STOCK DECIMAL(18,6),
    MAX_STOCK DECIMAL(18,6),
    MIN_ORDER DECIMAL(18,6),
    LOCKED VARCHAR(1),
    AVG_PRICE DECIMAL(18,6),
    COUNTED DECIMAL(18,6),
    WAS_COUNTED_DATE TIMESTAMP,
    USER_SIGN INTEGER,
    FROZEN VARCHAR(1),
    FROZEN_FOR VARCHAR(20),
    FROZEN_FROM TIMESTAMP,
    FROZEN_TO TIMESTAMP,
    LAST_PUR_PRC DECIMAL(18,6),
    LAST_PUR_CUR VARCHAR(5),
    LAST_PUR_DAT TIMESTAMP,
    LAST_EVAL_PRC DECIMAL(18,6),
    LAST_EVAL_DAT TIMESTAMP,
    STOCK_VALUE DECIMAL(18,6),
    STOCK_VALUE_FC DECIMAL(18,6),
    STOCK_VALUE_SC DECIMAL(18,6),
    INVNTRY_ACT VARCHAR(20),
    DECREASE_ACT VARCHAR(20),
    INCREASE_ACT VARCHAR(20),
    RETURN_ACT VARCHAR(20),
    EXPENSES_ACT VARCHAR(20),
    VAT_GROUP VARCHAR(20),
    FISCAL_ALREADY_POSTED VARCHAR(1),
    NON_DEDUCTIBLE_TAX DECIMAL(18,6),
    NON_DEDUCTIBLE_TAX_FC DECIMAL(18,6),
    NON_DEDUCTIBLE_TAX_SC DECIMAL(18,6),
    BASE_ENTRY INTEGER,
    BASE_LINE INTEGER,
    BASE_TYPE INTEGER,
    RECEIPT_DATE TIMESTAMP,
    RECEIPT_TIME VARCHAR(10),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_INVENTORY PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_INV_ID;
CREATE TRIGGER BI_SAP_INV_ID FOR SAP_INVENTORY ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_INV_ID, 1);
END;

CREATE UNIQUE INDEX IDX_SAP_INV_ITEM_WHS ON SAP_INVENTORY(ITEM_CODE, WHS_CODE);
CREATE INDEX IDX_SAP_INV_ITEM ON SAP_INVENTORY(ITEM_CODE);
CREATE INDEX IDX_SAP_INV_WHS ON SAP_INVENTORY(WHS_CODE);
CREATE INDEX IDX_SAP_INV_SYNC ON SAP_INVENTORY(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Transferencias de Stock
CREATE TABLE SAP_TRANSFERS (
    ID INTEGER NOT NULL,
    DOC_ENTRY INTEGER,
    SERIES INTEGER,
    PRINTED VARCHAR(1),
    DOC_DATE TIMESTAMP,
    DOC_DUE_DATE TIMESTAMP,
    CARD_CODE VARCHAR(50),
    CARD_NAME VARCHAR(255),
    ADDRESS BLOB SUB_TYPE TEXT,
    REFERENCE1 VARCHAR(100),
    REFERENCE2 VARCHAR(100),
    COMMENTS BLOB SUB_TYPE TEXT,
    JOURNAL_MEMO VARCHAR(255),
    PRICE_LIST INTEGER,
    SALES_PERSON_CODE INTEGER,
    FROM_WAREHOUSE VARCHAR(20),
    TO_WAREHOUSE VARCHAR(20),
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    TRANS_NUM INTEGER,
    USER_SIGN INTEGER,
    USER_SIGN2 INTEGER,
    USE_BASE_UNITS VARCHAR(1),
    TAX_DATE TIMESTAMP,
    CONFIRMED VARCHAR(1),
    PROBLEM VARCHAR(1),
    REASON INTEGER,
    BPL_ID INTEGER,
    BPL_NAME VARCHAR(255),
    VAT_REG_NUM VARCHAR(50),
    AUTHORIZED_USER VARCHAR(50),
    BRANCH_ID INTEGER,
    DOCUMENT_STATUS VARCHAR(1),
    SHIP_TO_CODE VARCHAR(50),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_TRANSFERS PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_TRANSFER_ID;
CREATE TRIGGER BI_SAP_TRANSFER_ID FOR SAP_TRANSFERS ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_TRANSFER_ID, 1);
END;

CREATE INDEX IDX_SAP_TRANSFER_DOC_ENTRY ON SAP_TRANSFERS(DOC_ENTRY);
CREATE INDEX IDX_SAP_TRANSFER_FROM_WHS ON SAP_TRANSFERS(FROM_WAREHOUSE);
CREATE INDEX IDX_SAP_TRANSFER_TO_WHS ON SAP_TRANSFERS(TO_WAREHOUSE);
CREATE INDEX IDX_SAP_TRANSFER_DATE ON SAP_TRANSFERS(DOC_DATE);
CREATE INDEX IDX_SAP_TRANSFER_SYNC ON SAP_TRANSFERS(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Service Calls/Llamadas de Servicio
CREATE TABLE SAP_SERVICE_CALLS (
    ID INTEGER NOT NULL,
    SERVICE_CALL_ID INTEGER,
    SUBJECT VARCHAR(255) NOT NULL,
    CUSTOMER_CODE VARCHAR(50) NOT NULL,
    CUSTOMER_NAME VARCHAR(255),
    CONTACT_CODE INTEGER,
    MANUFACTURER_SERIAL_NUM VARCHAR(100),
    INTERNAL_SERIAL_NUM VARCHAR(100),
    CONTRACT_ID INTEGER,
    CONTRACT_END_DATE TIMESTAMP,
    RESOLUTION_DATE TIMESTAMP,
    RESOLUTION_TIME VARCHAR(10),
    ORIGIN INTEGER,
    ITEM_CODE VARCHAR(50),
    ITEM_DESCRIPTION VARCHAR(255),
    ITEM_GROUP_CODE INTEGER,
    STATUS INTEGER,
    PRIORITY VARCHAR(1),
    CALL_TYPE INTEGER,
    PROBLEM_TYPE INTEGER,
    ASSIGNEE_CODE INTEGER,
    DESCRIPTION BLOB SUB_TYPE TEXT,
    TECHNICIAN_CODE INTEGER,
    RESOLUTION BLOB SUB_TYPE TEXT,
    CREATION_DATE TIMESTAMP,
    CREATION_TIME VARCHAR(10),
    RESPONDER INTEGER,
    UPDATED_DATE TIMESTAMP,
    UPDATED_TIME VARCHAR(10),
    BELONGS_TO_A_QUEUE VARCHAR(1),
    RESPONSE_BY_TIME VARCHAR(10),
    RESPONSE_BY_DATE TIMESTAMP,
    RESOLUTION_BY_TIME VARCHAR(10),
    RESOLUTION_BY_DATE TIMESTAMP,
    PROCESSED_BY_DIAMOND VARCHAR(1),
    CUSTOMER_REF_NO VARCHAR(100),
    PROBLEM_SUB_TYPE INTEGER,
    ATTACHMENT_ENTRY INTEGER,
    SERVICE_BP_TYPE VARCHAR(1),
    BUSINESS_PARTNER_CODE VARCHAR(50),
    BUSINESS_PARTNER_NAME VARCHAR(255),
    UPDATED_BY INTEGER,
    CLOSING_DATE TIMESTAMP,
    CLOSING_TIME VARCHAR(10),
    SERIES INTEGER,
    DOC_NUM INTEGER,
    HAND_WRITTEN VARCHAR(1),
    PERIOD_INDICATOR VARCHAR(1),
    START_DATE TIMESTAMP,
    START_TIME VARCHAR(10),
    END_DATE TIMESTAMP,
    END_TIME VARCHAR(10),
    DURATION DECIMAL(18,6),
    DURATION_TYPE VARCHAR(1),
    REMINDER VARCHAR(1),
    REMINDER_PERIOD DECIMAL(18,6),
    REMINDER_TYPE VARCHAR(1),
    LOCATION INTEGER,
    ADDRESS_TYPE VARCHAR(1),
    STREET VARCHAR(255),
    CITY VARCHAR(100),
    ROOM VARCHAR(50),
    STATE VARCHAR(100),
    COUNTRY VARCHAR(100),
    DISTRICT VARCHAR(100),
    ZIP_CODE VARCHAR(20),
    BLOCK VARCHAR(50),
    COUNTY VARCHAR(100),
    SHOW_IN_CALENDAR VARCHAR(1),
    ACTIVITY_LOCATION INTEGER,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_SERVICE_CALLS PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_SC_ID;
CREATE TRIGGER BI_SAP_SC_ID FOR SAP_SERVICE_CALLS ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_SC_ID, 1);
END;

CREATE INDEX IDX_SAP_SC_ID ON SAP_SERVICE_CALLS(SERVICE_CALL_ID);
CREATE INDEX IDX_SAP_SC_CUSTOMER ON SAP_SERVICE_CALLS(CUSTOMER_CODE);
CREATE INDEX IDX_SAP_SC_STATUS ON SAP_SERVICE_CALLS(STATUS);
CREATE INDEX IDX_SAP_SC_DATE ON SAP_SERVICE_CALLS(CREATION_DATE);
CREATE INDEX IDX_SAP_SC_SYNC ON SAP_SERVICE_CALLS(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla para Invoices/Facturas
CREATE TABLE SAP_INVOICES (
    ID INTEGER NOT NULL,
    DOC_ENTRY INTEGER,
    DOC_NUM INTEGER,
    DOC_TYPE VARCHAR(1),
    HAND_WRITTEN VARCHAR(1),
    PRINTED VARCHAR(1),
    DOC_DATE TIMESTAMP,
    DOC_DUE_DATE TIMESTAMP,
    CARD_CODE VARCHAR(50),
    CARD_NAME VARCHAR(255),
    ADDRESS BLOB SUB_TYPE TEXT,
    NUM_AT_CARD VARCHAR(100),
    DOC_TOTAL DECIMAL(18,6),
    ATTACHMENT_ENTRY INTEGER,
    DOC_CURRENCY VARCHAR(5),
    DOC_RATE DECIMAL(18,6),
    REFERENCE1 VARCHAR(100),
    REFERENCE2 VARCHAR(100),
    COMMENTS BLOB SUB_TYPE TEXT,
    JOURNAL_MEMO VARCHAR(255),
    PAYMENT_GROUP_CODE INTEGER,
    DOC_TIME VARCHAR(10),
    SALES_PERSON_CODE INTEGER,
    TRANSPORTATION_CODE INTEGER,
    CONFIRMED VARCHAR(1),
    IMPORT_FILE_NUM INTEGER,
    SUMMERY_TYPE VARCHAR(1),
    CONTACT_PERSON_CODE INTEGER,
    SHOW_SCN VARCHAR(1),
    SERIES INTEGER,
    TAX_DATE TIMESTAMP,
    PARTIAL_SUPPLY VARCHAR(1),
    DOC_OBJECT_CODE VARCHAR(20),
    SHIP_TO_CODE VARCHAR(50),
    INDICATOR VARCHAR(50),
    FEDERAL_TAX_ID VARCHAR(50),
    DISCOUNT_PERCENT DECIMAL(18,6),
    PAYMENT_REFERENCE VARCHAR(100),
    CREATION_DATE TIMESTAMP,
    UPDATE_DATE TIMESTAMP,
    FINANCIAL_PERIOD INTEGER,
    TRANS_NUM INTEGER,
    VAT_SUM DECIMAL(18,6),
    VAT_SUM_SYS DECIMAL(18,6),
    VAT_SUM_FC DECIMAL(18,6),
    NET_PROCEDURE VARCHAR(1),
    DOC_TOTAL_FC DECIMAL(18,6),
    DOC_TOTAL_SYS DECIMAL(18,6),
    REQUIRED_DATE TIMESTAMP,
    CANCEL_DATE TIMESTAMP,
    BLOCK_DUNNING VARCHAR(1),
    SUBMITTED VARCHAR(1),
    SEGMENT INTEGER,
    PICK_STATUS VARCHAR(1),
    PICK VARCHAR(1),
    PAYMENT_METHOD VARCHAR(20),
    PAYMENT_BLOCK VARCHAR(1),
    PAYMENT_BLOCK_ENTRY INTEGER,
    PROJECT VARCHAR(50),
    WAREHOUSE_UPDATE_TYPE VARCHAR(1),
    ROUNDING VARCHAR(1),
    STATUS VARCHAR(20),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SYNC_STATUS VARCHAR(20) DEFAULT 'PENDING',
    LAST_SYNC_AT TIMESTAMP,
    CONSTRAINT PK_SAP_INVOICES PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_INV_ID;
CREATE TRIGGER BI_SAP_INV_ID FOR SAP_INVOICES ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_INV_ID, 1);
END;

CREATE INDEX IDX_SAP_INV_DOC_ENTRY ON SAP_INVOICES(DOC_ENTRY);
CREATE INDEX IDX_SAP_INV_DOC_NUM ON SAP_INVOICES(DOC_NUM);
CREATE INDEX IDX_SAP_INV_CARD_CODE ON SAP_INVOICES(CARD_CODE);
CREATE INDEX IDX_SAP_INV_DOC_DATE ON SAP_INVOICES(DOC_DATE);
CREATE INDEX IDX_SAP_INV_SYNC ON SAP_INVOICES(SYNC_STATUS, LAST_SYNC_AT);

-- Tabla de control de sincronización
CREATE TABLE SAP_SYNC_LOG (
    ID INTEGER NOT NULL,
    ENTITY_TYPE VARCHAR(50) NOT NULL,
    ENTITY_ID VARCHAR(100),
    OPERATION VARCHAR(20) NOT NULL, -- INSERT, UPDATE, DELETE
    STATUS VARCHAR(20) NOT NULL, -- SUCCESS, ERROR, PENDING
    ERROR_MESSAGE BLOB SUB_TYPE TEXT,
    SYNC_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PROCESSING_TIME INTEGER, -- en milisegundos
    RETRY_COUNT INTEGER DEFAULT 0,
    LAST_RETRY_AT TIMESTAMP,
    CONSTRAINT PK_SAP_SYNC_LOG PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_SYNC_LOG_ID;
CREATE TRIGGER BI_SAP_SYNC_LOG_ID FOR SAP_SYNC_LOG ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_SYNC_LOG_ID, 1);
END;

CREATE INDEX IDX_SAP_SYNC_LOG_ENTITY ON SAP_SYNC_LOG(ENTITY_TYPE, ENTITY_ID);
CREATE INDEX IDX_SAP_SYNC_LOG_STATUS ON SAP_SYNC_LOG(STATUS);
CREATE INDEX IDX_SAP_SYNC_LOG_DATE ON SAP_SYNC_LOG(SYNC_DATE);

-- Configuración de sincronización
CREATE TABLE SAP_SYNC_CONFIG (
    ID INTEGER NOT NULL,
    ENTITY_TYPE VARCHAR(50) NOT NULL,
    SYNC_ENABLED VARCHAR(1) DEFAULT 'Y',
    SYNC_INTERVAL_MINUTES INTEGER DEFAULT 60,
    LAST_SYNC_AT TIMESTAMP,
    NEXT_SYNC_AT TIMESTAMP,
    BATCH_SIZE INTEGER DEFAULT 100,
    MAX_RETRIES INTEGER DEFAULT 3,
    FILTER_QUERY BLOB SUB_TYPE TEXT,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_SAP_SYNC_CONFIG PRIMARY KEY (ID)
);

CREATE GENERATOR GEN_SAP_SYNC_CONFIG_ID;
CREATE TRIGGER BI_SAP_SYNC_CONFIG_ID FOR SAP_SYNC_CONFIG ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = GEN_ID(GEN_SAP_SYNC_CONFIG_ID, 1);
END;

CREATE UNIQUE INDEX IDX_SAP_SYNC_CONFIG_ENTITY ON SAP_SYNC_CONFIG(ENTITY_TYPE);

-- Datos iniciales de configuración
INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('ITEMS', 'Y', 60, 100, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('BUSINESS_PARTNERS', 'Y', 120, 50, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('SALES_ORDERS', 'Y', 30, 50, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('DISPATCHES', 'Y', 30, 50, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('INVENTORY', 'Y', 30, 100, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('TRANSFERS', 'Y', 60, 50, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('SERVICE_CALLS', 'Y', 60, 30, 3);

INSERT INTO SAP_SYNC_CONFIG (ENTITY_TYPE, SYNC_ENABLED, SYNC_INTERVAL_MINUTES, BATCH_SIZE, MAX_RETRIES)
VALUES ('INVOICES', 'Y', 30, 50, 3);

COMMIT;